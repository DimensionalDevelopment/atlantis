plugins {
    id 'fabric-loom' version '0.8-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

// JENKINS STUFF! LEAVE THIS ALONE!
if (System.getenv('BUILD_NUMBER') != null) {
    version = "-dev-" + System.getenv('BUILD_NUMBER')
}


repositories {
    maven { url = 'https://jitpack.io' }
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    maven {
        url = "http://maven.kyrptonaught.dev"
        allowInsecureProtocol = true
    }
    maven { url "https://maven.shedaniel.me/" }
    maven {url "https://maven.quiltmc.org/repository/release/"}
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation 'software.bernie.geckolib:geckolib-fabric-1.17:3.0.5:dev'
    modImplementation 'net.kyrptonaught:customportalapi:0.0.1-beta45-1.17'
    include 'net.kyrptonaught:customportalapi:0.0.1-beta45-1.17'
    modImplementation 'com.github.Micalobia:BreathingLib:v1.0.3'
    include 'com.github.Micalobia:BreathingLib:v1.0.3'
    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modApi("me.shedaniel.cloth:cloth-config-fabric:5.0.34") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modImplementation "com.terraformersmc:modmenu:v2.0.2+1.17.2035ad2"
    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
    modImplementation("com.github.Mysticpasta1:OpenWorlds:cce9fed") {
        exclude module: "fabric-api"
    }
    include 'com.github.Mysticpasta1:OpenWorlds:cce9fed'
    modImplementation(group: 'com.google.code.gson', name: 'gson', version: '2.8.7')
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    // Minecraft 1.17 (21w19a) upwards uses Java 16.
    it.options.release = 16
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar { // shit
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

minecraft {
    accessWidener =  file("src/main/resources/atlantis.accesswidener")
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // Select the repositories you want to publish to
    // To publish to maven local, no extra repositories are necessary. Just use the task `publishToMavenLocal`.
    repositories {
        // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    }
}